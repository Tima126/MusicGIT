// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Music.Migrations
{
    [DbContext(typeof(BandList_dbContext))]
    partial class BandList_dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API_Music.Models.BandList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Country")
                        .HasColumnType("int")
                        .HasColumnName("country");

                    b.Property<int>("Genre")
                        .HasColumnType("int")
                        .HasColumnName("genre");

                    b.Property<int>("Lang")
                        .HasColumnType("int")
                        .HasColumnName("lang");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Country");

                    b.HasIndex("Genre");

                    b.HasIndex("Lang");

                    b.ToTable("Band_list", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.BandMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BandId")
                        .HasColumnType("int")
                        .HasColumnName("band_id");

                    b.Property<bool?>("IsInBand")
                        .HasColumnType("bit")
                        .HasColumnName("is_in_band");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Pseudonym")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pseudonym");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.ToTable("Band_members", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("API_Music.Models.GenreList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Genre_list", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("API_Music.Models.ReleaseList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Band")
                        .HasColumnType("int")
                        .HasColumnName("band");

                    b.Property<int>("Genre")
                        .HasColumnType("int")
                        .HasColumnName("genre");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("SongAmmount")
                        .HasColumnType("int")
                        .HasColumnName("song_ammount");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Band");

                    b.HasIndex("Genre");

                    b.HasIndex("Type");

                    b.ToTable("Release_list", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.ReleaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Release_type", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.SongList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Band")
                        .HasColumnType("int")
                        .HasColumnName("band");

                    b.Property<int>("Genre")
                        .HasColumnType("int")
                        .HasColumnName("genre");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("SongReleaseId")
                        .HasColumnType("int")
                        .HasColumnName("song_release_id");

                    b.HasKey("Id");

                    b.HasIndex("Band");

                    b.HasIndex("Genre");

                    b.HasIndex("SongReleaseId");

                    b.ToTable("Song_list", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<DateTime>("Regdate")
                        .HasColumnType("datetime")
                        .HasColumnName("regdate");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_Music.Models.UserFavorite", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("BandId")
                        .HasColumnType("int")
                        .HasColumnName("band_id");

                    b.Property<int>("ReleaseId")
                        .HasColumnType("int")
                        .HasColumnName("release_id");

                    b.Property<int>("SongId")
                        .HasColumnType("int")
                        .HasColumnName("song_id");

                    b.Property<string>("Review")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("review");

                    b.HasKey("Id", "BandId", "ReleaseId", "SongId")
                        .HasName("PK__User_fav__E85EE7727ACAB677");

                    b.HasIndex("BandId");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("SongId");

                    b.ToTable("User_favorite", (string)null);
                });

            modelBuilder.Entity("BandMembersBand", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int>("BandId")
                        .HasColumnType("int")
                        .HasColumnName("band_id");

                    b.HasKey("MemberId", "BandId")
                        .HasName("PK__Band_mem__FE73863ECE9C38AA");

                    b.HasIndex("BandId");

                    b.ToTable("Band_members_bands", (string)null);
                });

            modelBuilder.Entity("API_Music.Models.BandList", b =>
                {
                    b.HasOne("API_Music.Models.Country", "CountryNavigation")
                        .WithMany("BandLists")
                        .HasForeignKey("Country")
                        .IsRequired()
                        .HasConstraintName("FK__Band_list__count__7B5B524B");

                    b.HasOne("API_Music.Models.GenreList", "GenreNavigation")
                        .WithMany("BandLists")
                        .HasForeignKey("Genre")
                        .IsRequired()
                        .HasConstraintName("FK__Band_list__genre__797309D9");

                    b.HasOne("API_Music.Models.Language", "LangNavigation")
                        .WithMany("BandLists")
                        .HasForeignKey("Lang")
                        .IsRequired()
                        .HasConstraintName("FK__Band_list__lang__7A672E12");

                    b.Navigation("CountryNavigation");

                    b.Navigation("GenreNavigation");

                    b.Navigation("LangNavigation");
                });

            modelBuilder.Entity("API_Music.Models.BandMember", b =>
                {
                    b.HasOne("API_Music.Models.BandList", "Band")
                        .WithMany("BandMembers")
                        .HasForeignKey("BandId")
                        .HasConstraintName("FK__Band_memb__band___07C12930");

                    b.Navigation("Band");
                });

            modelBuilder.Entity("API_Music.Models.ReleaseList", b =>
                {
                    b.HasOne("API_Music.Models.BandList", "BandNavigation")
                        .WithMany("ReleaseLists")
                        .HasForeignKey("Band")
                        .IsRequired()
                        .HasConstraintName("FK__Release_li__band__7E37BEF6");

                    b.HasOne("API_Music.Models.GenreList", "GenreNavigation")
                        .WithMany("ReleaseLists")
                        .HasForeignKey("Genre")
                        .IsRequired()
                        .HasConstraintName("FK__Release_l__genre__7F2BE32F");

                    b.HasOne("API_Music.Models.ReleaseType", "TypeNavigation")
                        .WithMany("ReleaseLists")
                        .HasForeignKey("Type")
                        .IsRequired()
                        .HasConstraintName("FK__Release_li__type__00200768");

                    b.Navigation("BandNavigation");

                    b.Navigation("GenreNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("API_Music.Models.SongList", b =>
                {
                    b.HasOne("API_Music.Models.BandList", "BandNavigation")
                        .WithMany("SongLists")
                        .HasForeignKey("Band")
                        .IsRequired()
                        .HasConstraintName("FK__Song_list__band__02FC7413");

                    b.HasOne("API_Music.Models.GenreList", "GenreNavigation")
                        .WithMany("SongLists")
                        .HasForeignKey("Genre")
                        .IsRequired()
                        .HasConstraintName("FK__Song_list__genre__03F0984C");

                    b.HasOne("API_Music.Models.ReleaseList", "SongRelease")
                        .WithMany("SongLists")
                        .HasForeignKey("SongReleaseId")
                        .IsRequired()
                        .HasConstraintName("FK__Song_list__song___04E4BC85");

                    b.Navigation("BandNavigation");

                    b.Navigation("GenreNavigation");

                    b.Navigation("SongRelease");
                });

            modelBuilder.Entity("API_Music.Models.UserFavorite", b =>
                {
                    b.HasOne("API_Music.Models.BandList", "Band")
                        .WithMany("UserFavorites")
                        .HasForeignKey("BandId")
                        .IsRequired()
                        .HasConstraintName("FK__User_favo__band___0F624AF8");

                    b.HasOne("API_Music.Models.User", "IdNavigation")
                        .WithMany("UserFavorites")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK__User_favorit__id__0E6E26BF");

                    b.HasOne("API_Music.Models.ReleaseList", "Release")
                        .WithMany("UserFavorites")
                        .HasForeignKey("ReleaseId")
                        .IsRequired()
                        .HasConstraintName("FK__User_favo__relea__10566F31");

                    b.HasOne("API_Music.Models.SongList", "Song")
                        .WithMany("UserFavorites")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK__User_favo__song___114A936A");

                    b.Navigation("Band");

                    b.Navigation("IdNavigation");

                    b.Navigation("Release");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("BandMembersBand", b =>
                {
                    b.HasOne("API_Music.Models.BandList", null)
                        .WithMany()
                        .HasForeignKey("BandId")
                        .IsRequired()
                        .HasConstraintName("FK__Band_memb__band___0B91BA14");

                    b.HasOne("API_Music.Models.BandMember", null)
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Band_memb__membe__0A9D95DB");
                });

            modelBuilder.Entity("API_Music.Models.BandList", b =>
                {
                    b.Navigation("BandMembers");

                    b.Navigation("ReleaseLists");

                    b.Navigation("SongLists");

                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("API_Music.Models.Country", b =>
                {
                    b.Navigation("BandLists");
                });

            modelBuilder.Entity("API_Music.Models.GenreList", b =>
                {
                    b.Navigation("BandLists");

                    b.Navigation("ReleaseLists");

                    b.Navigation("SongLists");
                });

            modelBuilder.Entity("API_Music.Models.Language", b =>
                {
                    b.Navigation("BandLists");
                });

            modelBuilder.Entity("API_Music.Models.ReleaseList", b =>
                {
                    b.Navigation("SongLists");

                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("API_Music.Models.ReleaseType", b =>
                {
                    b.Navigation("ReleaseLists");
                });

            modelBuilder.Entity("API_Music.Models.SongList", b =>
                {
                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("API_Music.Models.User", b =>
                {
                    b.Navigation("UserFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
